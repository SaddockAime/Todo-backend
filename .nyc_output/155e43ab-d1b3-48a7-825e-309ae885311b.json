{"/Users/alll/Documents/GitHub/Todo-backend/src/server.ts":{"path":"/Users/alll/Documents/GitHub/Todo-backend/src/server.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":18},"end":{"line":6,"column":53}},"4":{"start":{"line":7,"column":20},"end":{"line":7,"column":66}},"5":{"start":{"line":8,"column":15},"end":{"line":8,"column":47}},"6":{"start":{"line":9,"column":17},"end":{"line":9,"column":51}},"7":{"start":{"line":10,"column":24},"end":{"line":10,"column":68}},"8":{"start":{"line":11,"column":0},"end":{"line":11,"column":38}},"9":{"start":{"line":12,"column":12},"end":{"line":12,"column":36}},"10":{"start":{"line":13,"column":0},"end":{"line":13,"column":34}},"11":{"start":{"line":14,"column":0},"end":{"line":14,"column":31}},"12":{"start":{"line":15,"column":0},"end":{"line":15,"column":26}},"13":{"start":{"line":16,"column":0},"end":{"line":16,"column":37}},"14":{"start":{"line":17,"column":0},"end":{"line":17,"column":34}},"15":{"start":{"line":18,"column":13},"end":{"line":18,"column":37}},"16":{"start":{"line":19,"column":0},"end":{"line":21,"column":3}},"17":{"start":{"line":20,"column":4},"end":{"line":20,"column":53}},"18":{"start":{"line":22,"column":0},"end":{"line":22,"column":22}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":19,"column":17},"end":{"line":19,"column":18}},"loc":{"start":{"line":19,"column":23},"end":{"line":21,"column":1}},"line":19}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":18,"column":13},"end":{"line":18,"column":37}},"type":"binary-expr","locations":[{"start":{"line":18,"column":13},"end":{"line":18,"column":29}},{"start":{"line":18,"column":33},"end":{"line":18,"column":37}}],"line":18}},"s":{"0":1,"1":5,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1},"f":{"0":5,"1":1},"b":{"0":[1,1,1],"1":[2,3],"2":[5,5],"3":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/alll/Documents/GitHub/Todo-backend/src/server.ts","sources":["/Users/alll/Documents/GitHub/Todo-backend/src/server.ts"],"names":[],"mappings":";;;;;AAAA,sDAAqD;AACrD,mEAA0C;AAC1C,gDAAwB;AACxB,oDAA4B;AAC5B,qEAA4C;AAC5C,sCAAmC;AAEnC,MAAM,GAAG,GAAG,IAAA,iBAAO,GAAE,CAAC;AACtB,GAAG,CAAC,GAAG,CAAC,iBAAO,CAAC,IAAI,EAAE,CAAC,CAAC;AACxB,GAAG,CAAC,GAAG,CAAC,IAAA,cAAI,GAAE,CAAC,CAAC;AAChB,gBAAM,CAAC,MAAM,EAAE,CAAC;AAEhB,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,mBAAS,CAAC,CAAC;AAE3B,IAAA,uBAAY,EAAC,GAAG,CAAC,CAAC;AAElB,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC;AACtC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE;IAClB,OAAO,CAAC,GAAG,CAAC,6BAA6B,IAAI,EAAE,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC;AAEH,kBAAe,GAAG,CAAC","sourcesContent":["import express, { Request, Response } from 'express';\nimport allRoutes from \"./routes/allRoutes\"\nimport cors from 'cors';\nimport dotenv from 'dotenv';\nimport swaggerSetup from '../swaggerConfig';\nimport './database/config/database'\n\nconst app = express();\napp.use(express.json());\napp.use(cors());\ndotenv.config();\n\napp.use(\"/api\", allRoutes);\n\nswaggerSetup(app);\n\nconst PORT = process.env.PORT || 5050;\napp.listen(PORT, () => {\n    console.log(`Server is running on port ${PORT}`);\n});\n\nexport default app;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c60afdc72701e896c25d2b779c29e74936d32edf"},"/Users/alll/Documents/GitHub/Todo-backend/src/routes/allRoutes.ts":{"path":"/Users/alll/Documents/GitHub/Todo-backend/src/routes/allRoutes.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":18},"end":{"line":6,"column":53}},"4":{"start":{"line":7,"column":25},"end":{"line":7,"column":69}},"5":{"start":{"line":8,"column":28},"end":{"line":8,"column":75}},"6":{"start":{"line":9,"column":15},"end":{"line":9,"column":41}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":51}},"8":{"start":{"line":11,"column":0},"end":{"line":11,"column":56}},"9":{"start":{"line":12,"column":0},"end":{"line":12,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":3,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1},"f":{"0":3},"b":{"0":[1,1,1],"1":[2,1],"2":[3,3]},"inputSourceMap":{"version":3,"file":"/Users/alll/Documents/GitHub/Todo-backend/src/routes/allRoutes.ts","sources":["/Users/alll/Documents/GitHub/Todo-backend/src/routes/allRoutes.ts"],"names":[],"mappings":";;;;;AAAA,sDAA8B;AAE9B,sEAA6C;AAC7C,4EAAmD;AAEnD,MAAM,MAAM,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAC;AAEhC,MAAM,CAAC,GAAG,CAAC,YAAY,EAAE,wBAAa,CAAC,CAAC;AACxC,MAAM,CAAC,GAAG,CAAC,cAAc,EAAE,2BAAgB,CAAC,CAAC;AAE7C,kBAAe,MAAM,CAAC","sourcesContent":["import express from 'express';\n\nimport todoUserRoute from './todouserRoutes';\nimport todomessageRoute from './todomessageRoutes';\n\nconst router = express.Router();\n\nrouter.use(\"/todousers\", todoUserRoute);\nrouter.use(\"/todomessage\", todomessageRoute);\n\nexport default router;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"52ef96fb9b4332cd658416039dc63e54c4259e92"},"/Users/alll/Documents/GitHub/Todo-backend/src/routes/todouserRoutes.ts":{"path":"/Users/alll/Documents/GitHub/Todo-backend/src/routes/todouserRoutes.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":18},"end":{"line":6,"column":53}},"4":{"start":{"line":7,"column":25},"end":{"line":7,"column":65}},"5":{"start":{"line":8,"column":29},"end":{"line":8,"column":90}},"6":{"start":{"line":9,"column":15},"end":{"line":9,"column":41}},"7":{"start":{"line":63,"column":0},"end":{"line":63,"column":52}},"8":{"start":{"line":114,"column":0},"end":{"line":114,"column":50}},"9":{"start":{"line":148,"column":0},"end":{"line":148,"column":90}},"10":{"start":{"line":191,"column":0},"end":{"line":191,"column":96}},"11":{"start":{"line":246,"column":0},"end":{"line":246,"column":92}},"12":{"start":{"line":289,"column":0},"end":{"line":289,"column":99}},"13":{"start":{"line":290,"column":0},"end":{"line":290,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1},"f":{"0":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/alll/Documents/GitHub/Todo-backend/src/routes/todouserRoutes.ts","sources":["/Users/alll/Documents/GitHub/Todo-backend/src/routes/todouserRoutes.ts"],"names":[],"mappings":";;;;;AAAA,sDAA8B;AAC9B,kEAA+D;AAC/D,2FAAgI;AAEhI,MAAM,MAAM,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAC;AAEhC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAoDG;AACH,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,2BAAM,CAAC,CAAC;AAE/B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAiDG;AACH,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,0BAAK,CAAC,CAAC;AAE7B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAgCG;AACH,MAAM,CAAC,GAAG,CAAC,YAAY,EAAE,+BAAc,EAAG,8BAAS,CAAC,CAAC;AAErD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAyCG;AACH,MAAM,CAAC,GAAG,CAAC,iBAAiB,EAAE,+BAAc,EAAE,+BAAU,CAAC,CAAC;AAE1D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAqDG;AACH,MAAM,CAAC,GAAG,CAAC,eAAe,EAAE,+BAAc,EAAE,6BAAQ,CAAC,CAAC;AAEtD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAyCG;AACH,MAAM,CAAC,MAAM,CAAC,iBAAiB,EAAE,+BAAc,EAAE,+BAAU,CAAC,CAAC;AAE7D,kBAAe,MAAM,CAAC","sourcesContent":["import express from 'express';\nimport { authentication } from '../middlewares/authentication';\nimport { login, signup, viewUsers, singleUser, deleteUser, editUser } from '../modules/todoUser/controllers/todouserController';\n\nconst router = express.Router();\n\n/**\n * @swagger\n * /todousers/signup:\n *   post:\n *     summary: Signup a new user\n *     requestBody:\n *       description: User data\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             properties:\n *               username:\n *                 type: string\n *               email:\n *                 type: string\n *               password:\n *                 type: string\n *           example:\n *             username: \"john_doe\"\n *             email: \"john@example.com\"\n *             password: \"password123\"\n *     responses:\n *       200:\n *         description: Success\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 status:\n *                   type: string\n *                   example: \"success\"\n *                 data:\n *                   type: object\n *                   properties:\n *                     user:\n *                       type: object\n *                       properties:\n *                         _id:\n *                           type: string\n *                         username:\n *                           type: string\n *                         email:\n *                           type: string\n *                     token:\n *                       type: string\n *       404:\n *         description: Bad Request\n *       500:\n *         description: Internal Server Error\n */\nrouter.post(\"/signup\", signup);\n\n/**\n * @swagger\n * /todousers/login:\n *   post:\n *     summary: Login a user\n *     requestBody:\n *       description: User credentials\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             properties:\n *               email:\n *                 type: string\n *               password:\n *                 type: string\n *           example:\n *             email: \"john@example.com\"\n *             password: \"password123\"\n *     responses:\n *       200:\n *         description: Success\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 status:\n *                   type: string\n *                   example: \"success\"\n *                 data:\n *                   type: object\n *                   properties:\n *                     user:\n *                       type: object\n *                       properties:\n *                         _id:\n *                           type: string\n *                         username:\n *                           type: string\n *                         email:\n *                           type: string\n *                     token:\n *                       type: string\n *       404:\n *         description: Bad Request\n *       500:\n *         description: Internal Server Error\n */\nrouter.post(\"/login\", login);\n\n/**\n * @swagger\n * /todousers/viewusers:\n *   get:\n *     summary: Get a list of all users\n *     responses:\n *       200:\n *         description: Success\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 message:\n *                   type: string\n *                   example: \"All users retrieved successfully\"\n *                 data:\n *                   type: object\n *                   properties:\n *                     user:\n *                       type: object\n *                       properties:\n *                         _id:\n *                           type: string\n *                         username:\n *                           type: string\n *                         email:\n *                           type: string\n *                     token:\n *                       type: string\n *       500:\n *         description: Internal Server Error\n */\nrouter.get(\"/viewusers\", authentication , viewUsers);\n\n/**\n * @swagger\n * /todousers/singleUser/{id}:\n *   get:\n *     summary: Get a single user by ID\n *     parameters:\n *       - in: path\n *         name: id\n *         required: true\n *         schema:\n *           type: string\n *         description: User ID\n *     responses:\n *       200:\n *         description: Success\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 message:\n *                   type: string\n *                   example: \"User retrieved successfully\"\n *                 data:\n *                   type: object\n *                   properties:\n *                     user:\n *                       type: object\n *                       properties:\n *                         _id:\n *                           type: string\n *                         username:\n *                           type: string\n *                         email:\n *                           type: string\n *                     token:\n *                       type: string\n *       404:\n *         description: User not found\n *       500:\n *         description: Internal Server Error\n */\nrouter.get(\"/singleUser/:id\", authentication ,singleUser);\n\n/**\n * @swagger\n * /todousers/editUser/{id}:\n *   put:\n *     summary: Edit a user by ID\n *     parameters:\n *       - in: path\n *         name: id\n *         required: true\n *         schema:\n *           type: string\n *         description: User ID\n *     requestBody:\n *       description: New user data\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             properties:\n *               username:\n *                 type: string\n *           example:\n *             username: \"new_username\"\n *     responses:\n *       200:\n *         description: Success\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 message:\n *                   type: string\n *                   example: \"User edited successfully\"\n *                 data:\n *                   type: object\n *                   properties:\n *                     user:\n *                       type: object\n *                       properties:\n *                         _id:\n *                           type: string\n *                         username:\n *                           type: string\n *                         email:\n *                           type: string\n *                     token:\n *                       type: string\n *       404:\n *         description: User not found\n *       500:\n *         description: Internal Server Error\n */\nrouter.put(\"/editUser/:id\", authentication ,editUser);\n\n/**\n * @swagger\n * /todousers/deleteUser/{id}:\n *   delete:\n *     summary: Delete a user by ID\n *     parameters:\n *       - in: path\n *         name: id\n *         required: true\n *         schema:\n *           type: string\n *         description: User ID\n *     responses:\n *       200:\n *         description: Success\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 message:\n *                   type: string\n *                   example: \"User deleted successfully\"\n *                 data:\n *                   type: object\n *                   properties:\n *                     user:\n *                       type: object\n *                       properties:\n *                         _id:\n *                           type: string\n *                         username:\n *                           type: string\n *                         email:\n *                           type: string\n *                     token:\n *                       type: string\n *       404:\n *         description: User not found\n *       500:\n *         description: Internal Server Error\n */\nrouter.delete(\"/deleteUser/:id\", authentication ,deleteUser);\n\nexport default router;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0c92c10a0047584d83b016786fc7c95deba2f12e"},"/Users/alll/Documents/GitHub/Todo-backend/src/middlewares/authentication.ts":{"path":"/Users/alll/Documents/GitHub/Todo-backend/src/middlewares/authentication.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":32}},"4":{"start":{"line":7,"column":23},"end":{"line":7,"column":63}},"5":{"start":{"line":8,"column":16},"end":{"line":8,"column":47}},"6":{"start":{"line":9,"column":23},"end":{"line":22,"column":1}},"7":{"start":{"line":10,"column":23},"end":{"line":10,"column":51}},"8":{"start":{"line":11,"column":18},"end":{"line":11,"column":56}},"9":{"start":{"line":12,"column":4},"end":{"line":14,"column":5}},"10":{"start":{"line":13,"column":8},"end":{"line":13,"column":78}},"11":{"start":{"line":15,"column":4},"end":{"line":21,"column":7}},"12":{"start":{"line":16,"column":8},"end":{"line":18,"column":9}},"13":{"start":{"line":17,"column":12},"end":{"line":17,"column":97}},"14":{"start":{"line":19,"column":8},"end":{"line":19,"column":36}},"15":{"start":{"line":20,"column":8},"end":{"line":20,"column":15}},"16":{"start":{"line":23,"column":0},"end":{"line":23,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":23},"end":{"line":9,"column":24}},"loc":{"start":{"line":9,"column":43},"end":{"line":22,"column":1}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":15,"column":50},"end":{"line":15,"column":51}},"loc":{"start":{"line":15,"column":68},"end":{"line":21,"column":5}},"line":15}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":8,"column":16},"end":{"line":8,"column":47}},"type":"binary-expr","locations":[{"start":{"line":8,"column":16},"end":{"line":8,"column":35}},{"start":{"line":8,"column":39},"end":{"line":8,"column":47}}],"line":8},"4":{"loc":{"start":{"line":11,"column":18},"end":{"line":11,"column":56}},"type":"binary-expr","locations":[{"start":{"line":11,"column":18},"end":{"line":11,"column":28}},{"start":{"line":11,"column":32},"end":{"line":11,"column":56}}],"line":11},"5":{"loc":{"start":{"line":12,"column":4},"end":{"line":14,"column":5}},"type":"if","locations":[{"start":{"line":12,"column":4},"end":{"line":14,"column":5}},{"start":{"line":12,"column":4},"end":{"line":14,"column":5}}],"line":12},"6":{"loc":{"start":{"line":16,"column":8},"end":{"line":18,"column":9}},"type":"if","locations":[{"start":{"line":16,"column":8},"end":{"line":18,"column":9}},{"start":{"line":16,"column":8},"end":{"line":18,"column":9}}],"line":16}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":7,"8":7,"9":7,"10":0,"11":7,"12":7,"13":0,"14":7,"15":7,"16":1},"f":{"0":1,"1":7,"2":7},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[1,1],"4":[7,7],"5":[0,7],"6":[0,7]},"inputSourceMap":{"version":3,"file":"/Users/alll/Documents/GitHub/Todo-backend/src/middlewares/authentication.ts","sources":["/Users/alll/Documents/GitHub/Todo-backend/src/middlewares/authentication.ts"],"names":[],"mappings":";;;;;;AAAA,gEAA+B;AAG/B,MAAM,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,OAAO,IAAI,QAAQ,CAAC;AAEzC,MAAM,cAAc,GAAG,CAAC,GAAoB,EAAE,GAAqB,EAAE,IAA0B,EAAE,EAAE;IACtG,MAAM,UAAU,GAAG,GAAG,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;IAChD,MAAM,KAAK,GAAG,UAAU,IAAI,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAErD,IAAI,CAAC,KAAK,EAAE,CAAC;QACT,OAAO,GAAG,CAAC,IAAI,CAAC,EAAC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,wBAAwB,EAAC,CAAC,CAAC;IACxE,CAAC;IAED,sBAAG,CAAC,MAAM,CAAC,KAAK,EAAE,OAAO,EAAE,CAAC,GAAG,EAAE,OAAO,EAAE,EAAE;QACxC,IAAI,GAAG,EAAE,CAAC;YACN,OAAO,GAAG,CAAC,IAAI,CAAC,EAAC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,uCAAuC,EAAC,CAAC,CAAC;QACvF,CAAC;QACA,GAAW,CAAC,MAAM,GAAI,OAAe,CAAC,MAAM,CAAC;QAC9C,IAAI,EAAE,CAAC;IACX,CAAC,CAAC,CAAC;AACP,CAAC,CAAC;AAfW,QAAA,cAAc,kBAezB","sourcesContent":["import jwt from 'jsonwebtoken';\nimport express from 'express';\n\nconst JWT_KEY = process.env.JWT_KEY || 'SECRET';\n\nexport const authentication = (req: express.Request, res: express.Response, next: express.NextFunction) => {\n    const authHeader = req.headers['authorization'];\n    const token = authHeader && authHeader.split(' ')[1];\n\n    if (!token) {\n        return res.json({status: false, message: \"You are not logged in.\"});\n    }\n\n    jwt.verify(token, JWT_KEY, (err, decoded) => {\n        if (err) {\n            return res.json({status: false, message: \"You are not logged in. Invalid Token.\"});\n        }\n        (req as any).userId = (decoded as any).userId;\n        next();\n    });\n};"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a2d7ee2112aa02dd052e887d290976b746606698"},"/Users/alll/Documents/GitHub/Todo-backend/src/modules/todoUser/controllers/todouserController.ts":{"path":"/Users/alll/Documents/GitHub/Todo-backend/src/modules/todoUser/controllers/todouserController.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":0},"end":{"line":11,"column":62}},"13":{"start":{"line":12,"column":0},"end":{"line":12,"column":121}},"14":{"start":{"line":13,"column":18},"end":{"line":13,"column":45}},"15":{"start":{"line":14,"column":23},"end":{"line":14,"column":60}},"16":{"start":{"line":16,"column":14},"end":{"line":48,"column":2}},"17":{"start":{"line":16,"column":28},"end":{"line":48,"column":2}},"18":{"start":{"line":17,"column":4},"end":{"line":47,"column":5}},"19":{"start":{"line":18,"column":36},"end":{"line":18,"column":44}},"20":{"start":{"line":19,"column":21},"end":{"line":19,"column":69}},"21":{"start":{"line":20,"column":8},"end":{"line":25,"column":9}},"22":{"start":{"line":21,"column":12},"end":{"line":24,"column":15}},"23":{"start":{"line":26,"column":32},"end":{"line":26,"column":93}},"24":{"start":{"line":27,"column":8},"end":{"line":32,"column":9}},"25":{"start":{"line":28,"column":12},"end":{"line":31,"column":15}},"26":{"start":{"line":33,"column":22},"end":{"line":33,"column":60}},"27":{"start":{"line":34,"column":8},"end":{"line":40,"column":11}},"28":{"start":{"line":43,"column":8},"end":{"line":46,"column":11}},"29":{"start":{"line":49,"column":0},"end":{"line":49,"column":22}},"30":{"start":{"line":51,"column":15},"end":{"line":84,"column":2}},"31":{"start":{"line":51,"column":29},"end":{"line":84,"column":2}},"32":{"start":{"line":52,"column":4},"end":{"line":83,"column":5}},"33":{"start":{"line":53,"column":46},"end":{"line":53,"column":54}},"34":{"start":{"line":54,"column":8},"end":{"line":59,"column":9}},"35":{"start":{"line":55,"column":12},"end":{"line":58,"column":15}},"36":{"start":{"line":60,"column":29},"end":{"line":60,"column":77}},"37":{"start":{"line":61,"column":8},"end":{"line":66,"column":9}},"38":{"start":{"line":62,"column":12},"end":{"line":65,"column":15}},"39":{"start":{"line":67,"column":31},"end":{"line":67,"column":77}},"40":{"start":{"line":68,"column":24},"end":{"line":72,"column":10}},"41":{"start":{"line":73,"column":8},"end":{"line":76,"column":11}},"42":{"start":{"line":79,"column":8},"end":{"line":82,"column":11}},"43":{"start":{"line":85,"column":0},"end":{"line":85,"column":24}},"44":{"start":{"line":87,"column":18},"end":{"line":101,"column":2}},"45":{"start":{"line":87,"column":32},"end":{"line":101,"column":2}},"46":{"start":{"line":88,"column":4},"end":{"line":100,"column":5}},"47":{"start":{"line":89,"column":25},"end":{"line":89,"column":64}},"48":{"start":{"line":90,"column":8},"end":{"line":93,"column":11}},"49":{"start":{"line":96,"column":8},"end":{"line":99,"column":11}},"50":{"start":{"line":102,"column":0},"end":{"line":102,"column":30}},"51":{"start":{"line":104,"column":19},"end":{"line":124,"column":2}},"52":{"start":{"line":104,"column":33},"end":{"line":124,"column":2}},"53":{"start":{"line":105,"column":4},"end":{"line":123,"column":5}},"54":{"start":{"line":106,"column":23},"end":{"line":106,"column":36}},"55":{"start":{"line":107,"column":21},"end":{"line":107,"column":67}},"56":{"start":{"line":108,"column":8},"end":{"line":112,"column":9}},"57":{"start":{"line":109,"column":12},"end":{"line":111,"column":15}},"58":{"start":{"line":113,"column":8},"end":{"line":116,"column":11}},"59":{"start":{"line":119,"column":8},"end":{"line":122,"column":11}},"60":{"start":{"line":125,"column":0},"end":{"line":125,"column":32}},"61":{"start":{"line":127,"column":17},"end":{"line":148,"column":2}},"62":{"start":{"line":127,"column":31},"end":{"line":148,"column":2}},"63":{"start":{"line":128,"column":4},"end":{"line":147,"column":5}},"64":{"start":{"line":129,"column":23},"end":{"line":129,"column":36}},"65":{"start":{"line":130,"column":29},"end":{"line":130,"column":37}},"66":{"start":{"line":131,"column":28},"end":{"line":131,"column":90}},"67":{"start":{"line":132,"column":8},"end":{"line":136,"column":9}},"68":{"start":{"line":133,"column":12},"end":{"line":135,"column":15}},"69":{"start":{"line":137,"column":8},"end":{"line":140,"column":11}},"70":{"start":{"line":143,"column":8},"end":{"line":146,"column":11}},"71":{"start":{"line":149,"column":0},"end":{"line":149,"column":28}},"72":{"start":{"line":151,"column":19},"end":{"line":172,"column":2}},"73":{"start":{"line":151,"column":33},"end":{"line":172,"column":2}},"74":{"start":{"line":152,"column":4},"end":{"line":171,"column":5}},"75":{"start":{"line":153,"column":23},"end":{"line":153,"column":36}},"76":{"start":{"line":154,"column":29},"end":{"line":154,"column":75}},"77":{"start":{"line":155,"column":8},"end":{"line":159,"column":9}},"78":{"start":{"line":156,"column":12},"end":{"line":158,"column":15}},"79":{"start":{"line":160,"column":28},"end":{"line":160,"column":76}},"80":{"start":{"line":161,"column":8},"end":{"line":164,"column":11}},"81":{"start":{"line":167,"column":8},"end":{"line":170,"column":11}},"82":{"start":{"line":173,"column":0},"end":{"line":173,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":16,"column":14},"end":{"line":16,"column":15}},"loc":{"start":{"line":16,"column":28},"end":{"line":48,"column":2}},"line":16},"8":{"name":"(anonymous_8)","decl":{"start":{"line":16,"column":62},"end":{"line":16,"column":63}},"loc":{"start":{"line":16,"column":75},"end":{"line":48,"column":1}},"line":16},"9":{"name":"(anonymous_9)","decl":{"start":{"line":51,"column":15},"end":{"line":51,"column":16}},"loc":{"start":{"line":51,"column":29},"end":{"line":84,"column":2}},"line":51},"10":{"name":"(anonymous_10)","decl":{"start":{"line":51,"column":63},"end":{"line":51,"column":64}},"loc":{"start":{"line":51,"column":76},"end":{"line":84,"column":1}},"line":51},"11":{"name":"(anonymous_11)","decl":{"start":{"line":87,"column":18},"end":{"line":87,"column":19}},"loc":{"start":{"line":87,"column":32},"end":{"line":101,"column":2}},"line":87},"12":{"name":"(anonymous_12)","decl":{"start":{"line":87,"column":66},"end":{"line":87,"column":67}},"loc":{"start":{"line":87,"column":79},"end":{"line":101,"column":1}},"line":87},"13":{"name":"(anonymous_13)","decl":{"start":{"line":104,"column":19},"end":{"line":104,"column":20}},"loc":{"start":{"line":104,"column":33},"end":{"line":124,"column":2}},"line":104},"14":{"name":"(anonymous_14)","decl":{"start":{"line":104,"column":67},"end":{"line":104,"column":68}},"loc":{"start":{"line":104,"column":80},"end":{"line":124,"column":1}},"line":104},"15":{"name":"(anonymous_15)","decl":{"start":{"line":127,"column":17},"end":{"line":127,"column":18}},"loc":{"start":{"line":127,"column":31},"end":{"line":148,"column":2}},"line":127},"16":{"name":"(anonymous_16)","decl":{"start":{"line":127,"column":65},"end":{"line":127,"column":66}},"loc":{"start":{"line":127,"column":78},"end":{"line":148,"column":1}},"line":127},"17":{"name":"(anonymous_17)","decl":{"start":{"line":151,"column":19},"end":{"line":151,"column":20}},"loc":{"start":{"line":151,"column":33},"end":{"line":172,"column":2}},"line":151},"18":{"name":"(anonymous_18)","decl":{"start":{"line":151,"column":67},"end":{"line":151,"column":68}},"loc":{"start":{"line":151,"column":80},"end":{"line":172,"column":1}},"line":151}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":20,"column":8},"end":{"line":25,"column":9}},"type":"if","locations":[{"start":{"line":20,"column":8},"end":{"line":25,"column":9}},{"start":{"line":20,"column":8},"end":{"line":25,"column":9}}],"line":20},"6":{"loc":{"start":{"line":27,"column":8},"end":{"line":32,"column":9}},"type":"if","locations":[{"start":{"line":27,"column":8},"end":{"line":32,"column":9}},{"start":{"line":27,"column":8},"end":{"line":32,"column":9}}],"line":27},"7":{"loc":{"start":{"line":54,"column":8},"end":{"line":59,"column":9}},"type":"if","locations":[{"start":{"line":54,"column":8},"end":{"line":59,"column":9}},{"start":{"line":54,"column":8},"end":{"line":59,"column":9}}],"line":54},"8":{"loc":{"start":{"line":54,"column":12},"end":{"line":54,"column":44}},"type":"binary-expr","locations":[{"start":{"line":54,"column":12},"end":{"line":54,"column":21}},{"start":{"line":54,"column":25},"end":{"line":54,"column":31}},{"start":{"line":54,"column":35},"end":{"line":54,"column":44}}],"line":54},"9":{"loc":{"start":{"line":61,"column":8},"end":{"line":66,"column":9}},"type":"if","locations":[{"start":{"line":61,"column":8},"end":{"line":66,"column":9}},{"start":{"line":61,"column":8},"end":{"line":66,"column":9}}],"line":61},"10":{"loc":{"start":{"line":108,"column":8},"end":{"line":112,"column":9}},"type":"if","locations":[{"start":{"line":108,"column":8},"end":{"line":112,"column":9}},{"start":{"line":108,"column":8},"end":{"line":112,"column":9}}],"line":108},"11":{"loc":{"start":{"line":132,"column":8},"end":{"line":136,"column":9}},"type":"if","locations":[{"start":{"line":132,"column":8},"end":{"line":136,"column":9}},{"start":{"line":132,"column":8},"end":{"line":136,"column":9}}],"line":132},"12":{"loc":{"start":{"line":155,"column":8},"end":{"line":159,"column":9}},"type":"if","locations":[{"start":{"line":155,"column":8},"end":{"line":159,"column":9}},{"start":{"line":155,"column":8},"end":{"line":159,"column":9}}],"line":155}},"s":{"0":1,"1":17,"2":0,"3":13,"4":17,"5":17,"6":0,"7":0,"8":0,"9":0,"10":30,"11":13,"12":1,"13":1,"14":1,"15":1,"16":1,"17":3,"18":3,"19":3,"20":3,"21":3,"22":1,"23":2,"24":2,"25":1,"26":1,"27":1,"28":0,"29":1,"30":1,"31":3,"32":3,"33":3,"34":3,"35":1,"36":2,"37":2,"38":1,"39":1,"40":1,"41":1,"42":0,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":0,"50":1,"51":1,"52":2,"53":2,"54":2,"55":2,"56":2,"57":1,"58":1,"59":0,"60":1,"61":1,"62":2,"63":2,"64":2,"65":2,"66":2,"67":2,"68":1,"69":1,"70":0,"71":1,"72":1,"73":2,"74":2,"75":2,"76":2,"77":2,"78":1,"79":1,"80":1,"81":0,"82":1},"f":{"0":13,"1":17,"2":0,"3":13,"4":17,"5":0,"6":30,"7":3,"8":3,"9":3,"10":3,"11":1,"12":1,"13":2,"14":2,"15":2,"16":2,"17":2,"18":2},"b":{"0":[1,1,1],"1":[17,0],"2":[13,13],"3":[13,17],"4":[13,13],"5":[1,2],"6":[1,1],"7":[1,2],"8":[3,2,2],"9":[1,1],"10":[1,1],"11":[1,1],"12":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/alll/Documents/GitHub/Todo-backend/src/modules/todoUser/controllers/todouserController.ts","sources":["/Users/alll/Documents/GitHub/Todo-backend/src/modules/todoUser/controllers/todouserController.ts"],"names":[],"mappings":"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","sourcesContent":["import express from 'express';\nimport { comparePassword, encryptPassword, generateToken } from '../../../helpers'\nimport { createUser, deleteUserById, findUserByEmail, findUserById, getAllUsers, editUserByUsername } from '../repository/todouserRepo';\n\n\n// Login\nexport const login = async (req: express.Request, res: express.Response) => {\n    try {\n        const { email, password } = req.body;\n\n        const user = await findUserByEmail(email);\n        if (!user) {\n            return res.status(404).json({\n                status: 'fail',\n                message: 'No user found with the provided email',\n            });\n        }\n\n        const isPasswordMatch = await comparePassword(password, user.password);\n        if (!isPasswordMatch) {\n            return res.status(404).json({\n                status: 'fail',\n                message: 'Incorrect password',\n            });\n        }\n\n        const token = generateToken(user._id);\n\n        return res.status(200).json({\n            status: 'success',\n            data: {\n                user,\n                token,\n            },\n        });\n    } catch (error: any) {\n        return res.status(500).json({\n            message: error.message,\n            code: error.code,\n        });\n    }\n};\n\n// Signup\nexport const signup = async (req: express.Request, res: express.Response) => {\n    try {\n        const { username, email, password } = req.body;\n\n        if (!username || !email || !password) {\n            return res.status(404).json({\n                status: 'fail',\n                message: 'insert user credentials',\n            });\n        }\n\n        const existingUser = await findUserByEmail(email);\n        if (existingUser) {\n            return res.status(404).json({\n                status: 'fail',\n                message: 'User already exists',\n            });\n        }\n\n        const hashedPassword = await encryptPassword(password);\n        const newUser = await createUser({\n            username,\n            email,\n            password: hashedPassword,\n        });\n\n        return res.status(200).json({\n            status: 'success',\n            data: newUser,\n        });\n    } catch (error: any) {\n        return res.status(500).json({\n            message: error.message,\n            code: error.code,\n        });\n    }\n};\n\n// View all users\nexport const viewUsers = async (req: express.Request, res: express.Response) => {\n    try {\n        const allUsers = await getAllUsers();\n        return res.status(200).json({\n            message: 'All users retrieved successfully',\n            data: allUsers,\n        });\n    } catch (error: any) {\n        return res.status(500).json({\n            message: error.message,\n            code: error.code,\n        });\n    }\n};\n\n// Get a single user\nexport const singleUser = async (req: express.Request, res: express.Response) => {\n    try {\n        const userId = req.params.id;\n        const user = await findUserById(userId);\n        if (!user) {\n            return res.status(404).json({\n                message: 'User not found',\n            });\n        }\n\n        return res.status(200).json({\n            message: 'User retrieved successfully',\n            data: user,\n        });\n    } catch (error: any) {\n        return res.status(500).json({\n            message: error.message,\n            code: error.code,\n        });\n    }\n};\n\n// Edit user\nexport const editUser = async (req: express.Request, res: express.Response) => {\n    try {\n        const userId = req.params.id;\n        const { username } = req.body;\n\n        const updatedUser = await editUserByUsername(userId, username);\n\n        if (!updatedUser) {\n            return res.status(404).json({\n                message: `User with ${userId}} is not found.`,\n            });\n        }\n\n        return res.status(200).json({\n            message: 'User edited successfully',\n            data: updatedUser,\n        });\n    } catch (error: any) {\n        return res.status(500).json({\n            message: error.message,\n            code: error.code,\n        });\n    }\n};\n\n// Delete user\nexport const deleteUser = async (req: express.Request, res: express.Response) => {\n    try {\n        const userId = req.params.id;\n        const existingUser = await findUserById(userId);\n\n        if (!existingUser) {\n            return res.status(404).json({\n                message: 'User not found',\n            });\n        }\n\n        const deletedUser = await deleteUserById(userId);\n\n        return res.status(200).json({\n            message: 'User deleted successfully',\n            data: deletedUser,\n        });\n    } catch (error: any) {\n        return res.status(500).json({\n            message: error.message,\n            code: error.code,\n        });\n    }\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b83d29a940cc127bbf02e3b6cec00dff2e08bc40"},"/Users/alll/Documents/GitHub/Todo-backend/src/helpers/index.ts":{"path":"/Users/alll/Documents/GitHub/Todo-backend/src/helpers/index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":83}},"4":{"start":{"line":7,"column":23},"end":{"line":7,"column":63}},"5":{"start":{"line":8,"column":26},"end":{"line":8,"column":54}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":136}},"7":{"start":{"line":9,"column":89},"end":{"line":9,"column":130}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":136}},"9":{"start":{"line":10,"column":89},"end":{"line":10,"column":130}},"10":{"start":{"line":11,"column":16},"end":{"line":11,"column":47}},"11":{"start":{"line":12,"column":22},"end":{"line":15,"column":1}},"12":{"start":{"line":13,"column":18},"end":{"line":13,"column":88}},"13":{"start":{"line":14,"column":4},"end":{"line":14,"column":17}},"14":{"start":{"line":16,"column":0},"end":{"line":16,"column":38}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":75},"end":{"line":9,"column":76}},"loc":{"start":{"line":9,"column":87},"end":{"line":9,"column":132}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":10,"column":75},"end":{"line":10,"column":76}},"loc":{"start":{"line":10,"column":87},"end":{"line":10,"column":132}},"line":10},"3":{"name":"(anonymous_3)","decl":{"start":{"line":12,"column":22},"end":{"line":12,"column":23}},"loc":{"start":{"line":12,"column":34},"end":{"line":15,"column":1}},"line":12}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":11,"column":16},"end":{"line":11,"column":47}},"type":"binary-expr","locations":[{"start":{"line":11,"column":16},"end":{"line":11,"column":35}},{"start":{"line":11,"column":39},"end":{"line":11,"column":47}}],"line":11}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":2,"10":1,"11":1,"12":1,"13":1,"14":1},"f":{"0":1,"1":1,"2":2,"3":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/alll/Documents/GitHub/Todo-backend/src/helpers/index.ts","sources":["/Users/alll/Documents/GitHub/Todo-backend/src/helpers/index.ts"],"names":[],"mappings":";;;;;;AAAA,gEAA8B;AAC9B,uDAAqE;AAS7C,gGATf,iCAAe,OASe;AAAE,gGATf,iCAAe,OASe;AAPxD,MAAM,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,OAAO,IAAI,QAAQ,CAAC;AAEhD,MAAM,aAAa,GAAG,CAAC,MAAW,EAAO,EAAE;IACvC,MAAM,KAAK,GAAG,sBAAG,CAAC,IAAI,CAAC,EAAC,MAAM,EAAC,EAAE,OAAO,EAAE,EAAC,SAAS,EAAE,KAAK,EAAC,CAAC,CAAC;IAC9D,OAAO,KAAK,CAAC;AACjB,CAAC,CAAA;AAEQ,sCAAa","sourcesContent":["import jwt from 'jsonwebtoken'\nimport { encryptPassword, comparePassword } from './passwordhelpers';\n\nconst JWT_KEY = process.env.JWT_KEY || 'SECRET';\n\nconst generateToken = (userId: any): any => {\n    const token = jwt.sign({userId}, JWT_KEY, {expiresIn: '12h'});\n    return token;\n}\n\nexport { generateToken, encryptPassword, comparePassword }\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3cd3a048307acbbc358728db7c34f0aa65523cbb"},"/Users/alll/Documents/GitHub/Todo-backend/src/helpers/passwordhelpers.ts":{"path":"/Users/alll/Documents/GitHub/Todo-backend/src/helpers/passwordhelpers.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":0},"end":{"line":15,"column":59}},"16":{"start":{"line":16,"column":17},"end":{"line":16,"column":51}},"17":{"start":{"line":17,"column":24},"end":{"line":19,"column":2}},"18":{"start":{"line":17,"column":38},"end":{"line":19,"column":2}},"19":{"start":{"line":18,"column":4},"end":{"line":18,"column":53}},"20":{"start":{"line":20,"column":0},"end":{"line":20,"column":42}},"21":{"start":{"line":21,"column":24},"end":{"line":23,"column":2}},"22":{"start":{"line":21,"column":54},"end":{"line":23,"column":2}},"23":{"start":{"line":22,"column":4},"end":{"line":22,"column":68}},"24":{"start":{"line":24,"column":0},"end":{"line":24,"column":42}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":17,"column":24},"end":{"line":17,"column":25}},"loc":{"start":{"line":17,"column":38},"end":{"line":19,"column":2}},"line":17},"9":{"name":"(anonymous_9)","decl":{"start":{"line":17,"column":72},"end":{"line":17,"column":73}},"loc":{"start":{"line":17,"column":85},"end":{"line":19,"column":1}},"line":17},"10":{"name":"(anonymous_10)","decl":{"start":{"line":21,"column":24},"end":{"line":21,"column":25}},"loc":{"start":{"line":21,"column":54},"end":{"line":23,"column":2}},"line":21},"11":{"name":"(anonymous_11)","decl":{"start":{"line":21,"column":88},"end":{"line":21,"column":89}},"loc":{"start":{"line":21,"column":101},"end":{"line":23,"column":1}},"line":21}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":3,"2":0,"3":3,"4":3,"5":3,"6":0,"7":0,"8":0,"9":0,"10":6,"11":3,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":2,"23":2,"24":1},"f":{"0":3,"1":3,"2":0,"3":3,"4":3,"5":0,"6":6,"7":1,"8":1,"9":1,"10":2,"11":2},"b":{"0":[1,1,1],"1":[3,0],"2":[3,3],"3":[3,3],"4":[3,3],"5":[1,1,1],"6":[0,1],"7":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/alll/Documents/GitHub/Todo-backend/src/helpers/passwordhelpers.ts","sources":["/Users/alll/Documents/GitHub/Todo-backend/src/helpers/passwordhelpers.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,oDAA4B;AAE5B,MAAM,eAAe,GAAG,CAAO,QAAgB,EAAE,EAAE;IAC/C,OAAO,MAAM,gBAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;AAC3C,CAAC,CAAA,CAAA;AAMQ,0CAAe;AAJxB,MAAM,eAAe,GAAG,CAAO,QAAgB,EAAE,cAAsB,EAAE,EAAE;IACvE,OAAO,MAAM,gBAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;AAC1D,CAAC,CAAA,CAAA;AAEyB,0CAAe","sourcesContent":["import bcrypt from 'bcrypt';\n\nconst encryptPassword = async (password: string) =>{\n    return await bcrypt.hash(password, 10);\n}\n\nconst comparePassword = async (password: string, hashedPassword: string) =>{\n    return await bcrypt.compare(password, hashedPassword);\n}\n\nexport { encryptPassword, comparePassword }\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2e380b8d149c3edf44a3daaabc00a8efefde17cd"},"/Users/alll/Documents/GitHub/Todo-backend/src/modules/todoUser/repository/todouserRepo.ts":{"path":"/Users/alll/Documents/GitHub/Todo-backend/src/modules/todoUser/repository/todouserRepo.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":0},"end":{"line":15,"column":153}},"16":{"start":{"line":16,"column":19},"end":{"line":16,"column":80}},"17":{"start":{"line":17,"column":19},"end":{"line":19,"column":2}},"18":{"start":{"line":17,"column":29},"end":{"line":19,"column":2}},"19":{"start":{"line":18,"column":4},"end":{"line":18,"column":49}},"20":{"start":{"line":20,"column":0},"end":{"line":20,"column":32}},"21":{"start":{"line":21,"column":20},"end":{"line":23,"column":2}},"22":{"start":{"line":21,"column":26},"end":{"line":23,"column":2}},"23":{"start":{"line":22,"column":4},"end":{"line":22,"column":43}},"24":{"start":{"line":24,"column":0},"end":{"line":24,"column":34}},"25":{"start":{"line":25,"column":24},"end":{"line":27,"column":2}},"26":{"start":{"line":25,"column":35},"end":{"line":27,"column":2}},"27":{"start":{"line":26,"column":4},"end":{"line":26,"column":55}},"28":{"start":{"line":28,"column":0},"end":{"line":28,"column":42}},"29":{"start":{"line":29,"column":21},"end":{"line":31,"column":2}},"30":{"start":{"line":29,"column":29},"end":{"line":31,"column":2}},"31":{"start":{"line":30,"column":4},"end":{"line":30,"column":57}},"32":{"start":{"line":32,"column":0},"end":{"line":32,"column":36}},"33":{"start":{"line":33,"column":23},"end":{"line":35,"column":2}},"34":{"start":{"line":33,"column":31},"end":{"line":35,"column":2}},"35":{"start":{"line":34,"column":4},"end":{"line":34,"column":59}},"36":{"start":{"line":36,"column":0},"end":{"line":36,"column":40}},"37":{"start":{"line":37,"column":27},"end":{"line":39,"column":2}},"38":{"start":{"line":37,"column":45},"end":{"line":39,"column":2}},"39":{"start":{"line":38,"column":4},"end":{"line":38,"column":81}},"40":{"start":{"line":40,"column":0},"end":{"line":40,"column":48}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":17,"column":19},"end":{"line":17,"column":20}},"loc":{"start":{"line":17,"column":29},"end":{"line":19,"column":2}},"line":17},"9":{"name":"(anonymous_9)","decl":{"start":{"line":17,"column":63},"end":{"line":17,"column":64}},"loc":{"start":{"line":17,"column":76},"end":{"line":19,"column":1}},"line":17},"10":{"name":"(anonymous_10)","decl":{"start":{"line":21,"column":20},"end":{"line":21,"column":21}},"loc":{"start":{"line":21,"column":26},"end":{"line":23,"column":2}},"line":21},"11":{"name":"(anonymous_11)","decl":{"start":{"line":21,"column":60},"end":{"line":21,"column":61}},"loc":{"start":{"line":21,"column":73},"end":{"line":23,"column":1}},"line":21},"12":{"name":"(anonymous_12)","decl":{"start":{"line":25,"column":24},"end":{"line":25,"column":25}},"loc":{"start":{"line":25,"column":35},"end":{"line":27,"column":2}},"line":25},"13":{"name":"(anonymous_13)","decl":{"start":{"line":25,"column":69},"end":{"line":25,"column":70}},"loc":{"start":{"line":25,"column":82},"end":{"line":27,"column":1}},"line":25},"14":{"name":"(anonymous_14)","decl":{"start":{"line":29,"column":21},"end":{"line":29,"column":22}},"loc":{"start":{"line":29,"column":29},"end":{"line":31,"column":2}},"line":29},"15":{"name":"(anonymous_15)","decl":{"start":{"line":29,"column":63},"end":{"line":29,"column":64}},"loc":{"start":{"line":29,"column":76},"end":{"line":31,"column":1}},"line":29},"16":{"name":"(anonymous_16)","decl":{"start":{"line":33,"column":23},"end":{"line":33,"column":24}},"loc":{"start":{"line":33,"column":31},"end":{"line":35,"column":2}},"line":33},"17":{"name":"(anonymous_17)","decl":{"start":{"line":33,"column":65},"end":{"line":33,"column":66}},"loc":{"start":{"line":33,"column":78},"end":{"line":35,"column":1}},"line":33},"18":{"name":"(anonymous_18)","decl":{"start":{"line":37,"column":27},"end":{"line":37,"column":28}},"loc":{"start":{"line":37,"column":45},"end":{"line":39,"column":2}},"line":37},"19":{"name":"(anonymous_19)","decl":{"start":{"line":37,"column":79},"end":{"line":37,"column":80}},"loc":{"start":{"line":37,"column":92},"end":{"line":39,"column":1}},"line":37}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":14,"2":13,"3":14,"4":14,"5":14,"6":0,"7":0,"8":0,"9":0,"10":28,"11":14,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":5,"27":5,"28":1,"29":1,"30":4,"31":4,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":2,"39":2,"40":1},"f":{"0":14,"1":14,"2":13,"3":14,"4":14,"5":0,"6":28,"7":1,"8":1,"9":1,"10":1,"11":1,"12":5,"13":5,"14":4,"15":4,"16":1,"17":1,"18":2,"19":2},"b":{"0":[1,1,1],"1":[1,13],"2":[14,14],"3":[14,14],"4":[14,14],"5":[1,1,1],"6":[1,0],"7":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/alll/Documents/GitHub/Todo-backend/src/modules/todoUser/repository/todouserRepo.ts","sources":["/Users/alll/Documents/GitHub/Todo-backend/src/modules/todoUser/repository/todouserRepo.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,iFAAqD;AAGrD,MAAM,UAAU,GAAG,CAAO,IAAS,EAAE,EAAE;IACnC,OAAO,MAAM,kBAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACnC,CAAC,CAAA,CAAA;AAuBG,gCAAU;AArBd,MAAM,WAAW,GAAG,GAAS,EAAE;IAC3B,OAAO,MAAM,kBAAI,CAAC,IAAI,EAAE,CAAA;AAC5B,CAAC,CAAA,CAAA;AAuBG,kCAAW;AArBf,MAAM,eAAe,GAAG,CAAO,KAAa,EAAE,EAAE;IAC5C,OAAO,MAAM,kBAAI,CAAC,OAAO,CAAC,EAAC,KAAK,EAAC,CAAC,CAAC;AACvC,CAAC,CAAA,CAAA;AAgBG,0CAAe;AAdnB,MAAM,YAAY,GAAG,CAAO,EAAU,EAAE,EAAE;IACtC,OAAO,MAAM,kBAAI,CAAC,OAAO,CAAC,EAAC,GAAG,EAAE,EAAE,EAAC,CAAC,CAAC;AACzC,CAAC,CAAA,CAAA;AAgBG,oCAAY;AAdhB,MAAM,cAAc,GAAG,CAAO,EAAU,EAAE,EAAE;IACxC,OAAO,MAAM,kBAAI,CAAC,SAAS,CAAC,EAAC,GAAG,EAAE,EAAE,EAAC,CAAC,CAAC;AAC3C,CAAC,CAAA,CAAA;AASG,wCAAc;AAPlB,MAAM,kBAAkB,GAAG,CAAO,EAAU,EAAE,QAAgB,EAAE,EAAE;IAC9D,OAAO,MAAM,kBAAI,CAAC,iBAAiB,CAAC,EAAC,GAAG,EAAE,EAAE,EAAC,EAAC,EAAC,QAAQ,EAAC,CAAC,CAAA;AAC7D,CAAC,CAAA,CAAA;AAMG,gDAAkB","sourcesContent":["import User from \"../../../database/models/todouser\";\n\n\nconst createUser = async (body: any) => {\n    return await User.create(body);\n}\n\nconst getAllUsers = async () => {\n    return await User.find()\n}\n\nconst findUserByEmail = async (email: string) => {\n    return await User.findOne({email});\n}\n\nconst findUserById = async (id: string) => {\n    return await User.findOne({_id: id});\n}\n\nconst deleteUserById = async (id: string) => {\n    return await User.deleteOne({_id: id});\n}\n\nconst editUserByUsername = async (id: string, username: string) => {\n    return await User.findByIdAndUpdate({_id: id},{username})\n}\n\nexport {\n    createUser,\n    findUserByEmail,\n    deleteUserById,\n    editUserByUsername,\n    getAllUsers,\n    findUserById\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3ed89bcfc997f5963f78bbe8a8f76eacbe51e6a6"},"/Users/alll/Documents/GitHub/Todo-backend/src/routes/todomessageRoutes.ts":{"path":"/Users/alll/Documents/GitHub/Todo-backend/src/routes/todomessageRoutes.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":18},"end":{"line":6,"column":53}},"4":{"start":{"line":7,"column":32},"end":{"line":7,"column":99}},"5":{"start":{"line":8,"column":15},"end":{"line":8,"column":41}},"6":{"start":{"line":60,"column":0},"end":{"line":60,"column":69}},"7":{"start":{"line":96,"column":0},"end":{"line":96,"column":66}},"8":{"start":{"line":139,"column":0},"end":{"line":139,"column":75}},"9":{"start":{"line":140,"column":0},"end":{"line":140,"column":72}},"10":{"start":{"line":141,"column":0},"end":{"line":141,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1},"f":{"0":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/alll/Documents/GitHub/Todo-backend/src/routes/todomessageRoutes.ts","sources":["/Users/alll/Documents/GitHub/Todo-backend/src/routes/todomessageRoutes.ts"],"names":[],"mappings":";;;;;AAAA,sDAA8B;AAE9B,oGAAqI;AAErI,MAAM,MAAM,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAC;AAEhC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAkDG;AACH,MAAM,CAAC,IAAI,CAAC,gBAAgB,EAAE,qCAAa,CAAC,CAAC;AAE7C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAkCG;AACH,MAAM,CAAC,GAAG,CAAC,eAAe,EAAE,oCAAY,CAAC,CAAC;AAE1C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAyCG;AACH,MAAM,CAAC,MAAM,CAAC,oBAAoB,EAAE,qCAAa,CAAC,CAAC;AAEnD,MAAM,CAAC,GAAG,CAAC,oBAAoB,EAAE,qCAAa,CAAC,CAAC;AAEhD,kBAAe,MAAM,CAAC","sourcesContent":["import express from 'express';\n\nimport { createMessage, viewMessages, deleteMessage, updateMessage } from '../modules/todoMessage/controllers/todomessageController';\n\nconst router = express.Router();\n\n/**\n * @swagger\n * /messages/createMessage:\n *   post:\n *     summary: Create a new message\n *     requestBody:\n *       description: message data\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             properties:\n *               name:\n *                 type: string\n *               email:\n *                 type: string\n *               message:\n *                 type: string\n *           example:\n *             name: \"saddock\"\n *             email: \"saddock@gmail.com\"\n *             message: \"Hello there!\"\n *     responses:\n *       200:\n *         description: Success\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 message:\n *                   type: string\n *                   example: \"Message Sent\"\n *                 data:\n *                   type: object\n *                   properties:\n *                     newMessage:\n *                       type: object\n *                       properties:\n *                         _id:\n *                           type: string\n *                         name:\n *                           type: string\n *                         email:\n *                           type: string\n *                         message:\n *                           type: string\n *       500:\n *         description: Internal Server Error\n */\nrouter.post(\"/createMessage\", createMessage);\n\n/**\n * @swagger\n * /messages/viewMessages:\n *   get:\n *     summary: Get a list of all messages\n *     responses:\n *       200:\n *         description: Success\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 message:\n *                   type: string\n *                   example: \"All Messages successfully found\"\n *                 data:\n *                   type: object\n *                   properties:\n *                     allMessages:\n *                       type: object\n *                       properties:\n *                         _id:\n *                           type: string\n *                         name:\n *                           type: string\n *                         email:\n *                           type: string\n *                         message:\n *                           type: string\n *       404:\n *         description: messages were not found\n *       500:\n *         description: Internal Server Error\n */\nrouter.get(\"/viewMessages\", viewMessages);\n\n/**\n * @swagger\n * /messages/deleteMessage/{id}:\n *   delete:\n *     summary: Delete a message by ID\n *     parameters:\n *       - in: path\n *         name: id\n *         required: true\n *         schema:\n *           type: string\n *         description: message ID\n *     responses:\n *       200:\n *         description: Success\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 message:\n *                   type: string\n *                   example: \"Message deleted successfully\"\n *                 data:\n *                   type: object\n *                   properties:\n *                     deletedMessage:\n *                       type: object\n *                       properties:\n *                         _id:\n *                           type: string\n *                         name:\n *                           type: string\n *                         email:\n *                           type: string\n *                         message:\n *                           type: string\n *       404:\n *         description: Message not found\n *       500:\n *         description: Internal Server Error\n */\nrouter.delete(\"/deleteMessage/:id\", deleteMessage);\n\nrouter.put(\"/updateMessage/:id\", updateMessage);\n\nexport default router;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c3568e128ccb97597b8ba663a40144995ac5b6c3"},"/Users/alll/Documents/GitHub/Todo-backend/src/modules/todoMessage/controllers/todomessageController.ts":{"path":"/Users/alll/Documents/GitHub/Todo-backend/src/modules/todoMessage/controllers/todomessageController.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":0},"end":{"line":11,"column":62}},"13":{"start":{"line":12,"column":0},"end":{"line":12,"column":102}},"14":{"start":{"line":13,"column":26},"end":{"line":13,"column":66}},"15":{"start":{"line":15,"column":22},"end":{"line":31,"column":2}},"16":{"start":{"line":15,"column":36},"end":{"line":31,"column":2}},"17":{"start":{"line":17,"column":4},"end":{"line":30,"column":5}},"18":{"start":{"line":18,"column":41},"end":{"line":18,"column":49}},"19":{"start":{"line":19,"column":27},"end":{"line":19,"column":96}},"20":{"start":{"line":20,"column":8},"end":{"line":23,"column":11}},"21":{"start":{"line":26,"column":8},"end":{"line":29,"column":11}},"22":{"start":{"line":32,"column":0},"end":{"line":32,"column":38}},"23":{"start":{"line":34,"column":21},"end":{"line":53,"column":2}},"24":{"start":{"line":34,"column":35},"end":{"line":53,"column":2}},"25":{"start":{"line":35,"column":4},"end":{"line":52,"column":5}},"26":{"start":{"line":36,"column":28},"end":{"line":36,"column":73}},"27":{"start":{"line":37,"column":8},"end":{"line":41,"column":9}},"28":{"start":{"line":38,"column":12},"end":{"line":40,"column":15}},"29":{"start":{"line":42,"column":8},"end":{"line":45,"column":11}},"30":{"start":{"line":48,"column":8},"end":{"line":51,"column":11}},"31":{"start":{"line":54,"column":0},"end":{"line":54,"column":36}},"32":{"start":{"line":56,"column":22},"end":{"line":77,"column":2}},"33":{"start":{"line":56,"column":36},"end":{"line":77,"column":2}},"34":{"start":{"line":57,"column":4},"end":{"line":76,"column":5}},"35":{"start":{"line":58,"column":23},"end":{"line":58,"column":36}},"36":{"start":{"line":59,"column":41},"end":{"line":59,"column":49}},"37":{"start":{"line":60,"column":31},"end":{"line":60,"column":105}},"38":{"start":{"line":61,"column":8},"end":{"line":65,"column":9}},"39":{"start":{"line":62,"column":12},"end":{"line":64,"column":15}},"40":{"start":{"line":66,"column":8},"end":{"line":69,"column":11}},"41":{"start":{"line":72,"column":8},"end":{"line":75,"column":11}},"42":{"start":{"line":78,"column":0},"end":{"line":78,"column":38}},"43":{"start":{"line":80,"column":22},"end":{"line":102,"column":2}},"44":{"start":{"line":80,"column":36},"end":{"line":102,"column":2}},"45":{"start":{"line":81,"column":4},"end":{"line":101,"column":5}},"46":{"start":{"line":82,"column":26},"end":{"line":82,"column":39}},"47":{"start":{"line":83,"column":32},"end":{"line":83,"column":86}},"48":{"start":{"line":84,"column":8},"end":{"line":88,"column":9}},"49":{"start":{"line":85,"column":12},"end":{"line":87,"column":15}},"50":{"start":{"line":90,"column":31},"end":{"line":90,"column":88}},"51":{"start":{"line":91,"column":8},"end":{"line":94,"column":11}},"52":{"start":{"line":97,"column":8},"end":{"line":100,"column":11}},"53":{"start":{"line":103,"column":0},"end":{"line":103,"column":38}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":15,"column":22},"end":{"line":15,"column":23}},"loc":{"start":{"line":15,"column":36},"end":{"line":31,"column":2}},"line":15},"8":{"name":"(anonymous_8)","decl":{"start":{"line":15,"column":70},"end":{"line":15,"column":71}},"loc":{"start":{"line":15,"column":83},"end":{"line":31,"column":1}},"line":15},"9":{"name":"(anonymous_9)","decl":{"start":{"line":34,"column":21},"end":{"line":34,"column":22}},"loc":{"start":{"line":34,"column":35},"end":{"line":53,"column":2}},"line":34},"10":{"name":"(anonymous_10)","decl":{"start":{"line":34,"column":69},"end":{"line":34,"column":70}},"loc":{"start":{"line":34,"column":82},"end":{"line":53,"column":1}},"line":34},"11":{"name":"(anonymous_11)","decl":{"start":{"line":56,"column":22},"end":{"line":56,"column":23}},"loc":{"start":{"line":56,"column":36},"end":{"line":77,"column":2}},"line":56},"12":{"name":"(anonymous_12)","decl":{"start":{"line":56,"column":70},"end":{"line":56,"column":71}},"loc":{"start":{"line":56,"column":83},"end":{"line":77,"column":1}},"line":56},"13":{"name":"(anonymous_13)","decl":{"start":{"line":80,"column":22},"end":{"line":80,"column":23}},"loc":{"start":{"line":80,"column":36},"end":{"line":102,"column":2}},"line":80},"14":{"name":"(anonymous_14)","decl":{"start":{"line":80,"column":70},"end":{"line":80,"column":71}},"loc":{"start":{"line":80,"column":83},"end":{"line":102,"column":1}},"line":80}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":37,"column":8},"end":{"line":41,"column":9}},"type":"if","locations":[{"start":{"line":37,"column":8},"end":{"line":41,"column":9}},{"start":{"line":37,"column":8},"end":{"line":41,"column":9}}],"line":37},"6":{"loc":{"start":{"line":61,"column":8},"end":{"line":65,"column":9}},"type":"if","locations":[{"start":{"line":61,"column":8},"end":{"line":65,"column":9}},{"start":{"line":61,"column":8},"end":{"line":65,"column":9}}],"line":61},"7":{"loc":{"start":{"line":84,"column":8},"end":{"line":88,"column":9}},"type":"if","locations":[{"start":{"line":84,"column":8},"end":{"line":88,"column":9}},{"start":{"line":84,"column":8},"end":{"line":88,"column":9}}],"line":84}},"s":{"0":1,"1":7,"2":0,"3":6,"4":7,"5":7,"6":0,"7":0,"8":0,"9":0,"10":13,"11":6,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":0,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":0,"29":1,"30":0,"31":1,"32":1,"33":2,"34":2,"35":2,"36":2,"37":2,"38":2,"39":1,"40":1,"41":0,"42":1,"43":1,"44":2,"45":2,"46":2,"47":2,"48":2,"49":1,"50":1,"51":1,"52":0,"53":1},"f":{"0":6,"1":7,"2":0,"3":6,"4":7,"5":0,"6":13,"7":1,"8":1,"9":1,"10":1,"11":2,"12":2,"13":2,"14":2},"b":{"0":[1,1,1],"1":[7,0],"2":[6,6],"3":[6,7],"4":[6,6],"5":[0,1],"6":[1,1],"7":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/alll/Documents/GitHub/Todo-backend/src/modules/todoMessage/controllers/todomessageController.ts","sources":["/Users/alll/Documents/GitHub/Todo-backend/src/modules/todoMessage/controllers/todomessageController.ts"],"names":[],"mappings":"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","sourcesContent":["import express from 'express'\nimport { createMessages, getAllMessages, getMessageById, deleteMessageById, editMessageById } from '../repository/todomessageRepo'\n\n\n//messages\nexport const createMessage = async (req: express.Request, res: express.Response) => {\n    //console.log(\"hello\")\n    try {\n        const {name, email, message} = req.body\n            const newMessage = await createMessages({name, email, message})\n            return res.status(200).json({\n                message: \"Message Sent\",\n                data: newMessage\n            })\n    } catch(error: any) {\n        return res.status(500).json({\n            message: error.message,\n            code: error.code,             \n        })\n    }\n}\n\n\n//view all messages\nexport const viewMessages = async (req: express.Request, res: express.Response) => {\n    try {\n        const allMessages = await getAllMessages()\n        \n        if(! allMessages){\n            return res.status(404).json({\n                message: \"messages were not found\"\n            })\n        }\n        return res.status(200).json({\n            message: \"All Messages successfully found\",\n            data: allMessages\n        })\n    }\n    catch(error: any){\n        return res.status(500).json({\n            message: error.message,\n            code: error.code,             \n        })\n    }\n}\n\n\n// Update message\nexport const updateMessage = async (req: express.Request, res: express.Response) => {\n    try {\n        const userId = req.params.id;\n        const { name, email, message } = req.body;\n\n        const updatedMessage = await editMessageById(userId, name, email, message);\n\n        if (!updatedMessage) {\n            return res.status(404).json({\n                message: `Message with ${userId}} is not found.`,\n            });\n        }\n\n        return res.status(200).json({\n            message: 'Message edited successfully',\n            data: updatedMessage,\n        });\n    } catch (error: any) {\n        return res.status(500).json({\n            message: error.message,\n            code: error.code,\n        });\n    }\n};\n\n\n//delete message\nexport const deleteMessage = async (req: express.Request, res: express.Response) => {\n    try {\n        const messageId = req.params.id;\n        const existingMessage = await getMessageById(messageId);\n        if (!existingMessage) {\n            return res.status(404).json({\n                message: \"Message not found\"\n            });\n        }\n        // Delete the message\n        const deletedMessage = await deleteMessageById(messageId);\n        return res.status(200).json({\n            message: \"Message deleted successfully\",\n            data: deletedMessage\n        });\n    } \n    catch (error: any) {\n        return res.status(500).json({\n            message: error.message,\n            code: error.code\n        });\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ca308204af0501e40afa7ecb0636035e0406be67"},"/Users/alll/Documents/GitHub/Todo-backend/src/modules/todoMessage/repository/todomessageRepo.ts":{"path":"/Users/alll/Documents/GitHub/Todo-backend/src/modules/todoMessage/repository/todomessageRepo.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":0},"end":{"line":15,"column":136}},"16":{"start":{"line":16,"column":22},"end":{"line":16,"column":86}},"17":{"start":{"line":17,"column":23},"end":{"line":19,"column":2}},"18":{"start":{"line":17,"column":33},"end":{"line":19,"column":2}},"19":{"start":{"line":18,"column":4},"end":{"line":18,"column":52}},"20":{"start":{"line":20,"column":0},"end":{"line":20,"column":40}},"21":{"start":{"line":21,"column":23},"end":{"line":23,"column":2}},"22":{"start":{"line":21,"column":29},"end":{"line":23,"column":2}},"23":{"start":{"line":22,"column":4},"end":{"line":22,"column":46}},"24":{"start":{"line":24,"column":0},"end":{"line":24,"column":40}},"25":{"start":{"line":25,"column":23},"end":{"line":27,"column":2}},"26":{"start":{"line":25,"column":31},"end":{"line":27,"column":2}},"27":{"start":{"line":26,"column":4},"end":{"line":26,"column":60}},"28":{"start":{"line":28,"column":0},"end":{"line":28,"column":40}},"29":{"start":{"line":29,"column":24},"end":{"line":31,"column":2}},"30":{"start":{"line":29,"column":54},"end":{"line":31,"column":2}},"31":{"start":{"line":30,"column":4},"end":{"line":30,"column":96}},"32":{"start":{"line":32,"column":0},"end":{"line":32,"column":42}},"33":{"start":{"line":33,"column":26},"end":{"line":35,"column":2}},"34":{"start":{"line":33,"column":34},"end":{"line":35,"column":2}},"35":{"start":{"line":34,"column":4},"end":{"line":34,"column":62}},"36":{"start":{"line":36,"column":0},"end":{"line":36,"column":46}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":17,"column":23},"end":{"line":17,"column":24}},"loc":{"start":{"line":17,"column":33},"end":{"line":19,"column":2}},"line":17},"9":{"name":"(anonymous_9)","decl":{"start":{"line":17,"column":67},"end":{"line":17,"column":68}},"loc":{"start":{"line":17,"column":80},"end":{"line":19,"column":1}},"line":17},"10":{"name":"(anonymous_10)","decl":{"start":{"line":21,"column":23},"end":{"line":21,"column":24}},"loc":{"start":{"line":21,"column":29},"end":{"line":23,"column":2}},"line":21},"11":{"name":"(anonymous_11)","decl":{"start":{"line":21,"column":63},"end":{"line":21,"column":64}},"loc":{"start":{"line":21,"column":76},"end":{"line":23,"column":1}},"line":21},"12":{"name":"(anonymous_12)","decl":{"start":{"line":25,"column":23},"end":{"line":25,"column":24}},"loc":{"start":{"line":25,"column":31},"end":{"line":27,"column":2}},"line":25},"13":{"name":"(anonymous_13)","decl":{"start":{"line":25,"column":65},"end":{"line":25,"column":66}},"loc":{"start":{"line":25,"column":78},"end":{"line":27,"column":1}},"line":25},"14":{"name":"(anonymous_14)","decl":{"start":{"line":29,"column":24},"end":{"line":29,"column":25}},"loc":{"start":{"line":29,"column":54},"end":{"line":31,"column":2}},"line":29},"15":{"name":"(anonymous_15)","decl":{"start":{"line":29,"column":88},"end":{"line":29,"column":89}},"loc":{"start":{"line":29,"column":101},"end":{"line":31,"column":1}},"line":29},"16":{"name":"(anonymous_16)","decl":{"start":{"line":33,"column":26},"end":{"line":33,"column":27}},"loc":{"start":{"line":33,"column":34},"end":{"line":35,"column":2}},"line":33},"17":{"name":"(anonymous_17)","decl":{"start":{"line":33,"column":68},"end":{"line":33,"column":69}},"loc":{"start":{"line":33,"column":81},"end":{"line":35,"column":1}},"line":33}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":7,"2":6,"3":7,"4":7,"5":7,"6":0,"7":0,"8":0,"9":0,"10":14,"11":7,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":2,"27":2,"28":1,"29":1,"30":2,"31":2,"32":1,"33":1,"34":1,"35":1,"36":1},"f":{"0":7,"1":7,"2":6,"3":7,"4":7,"5":0,"6":14,"7":1,"8":1,"9":1,"10":1,"11":1,"12":2,"13":2,"14":2,"15":2,"16":1,"17":1},"b":{"0":[1,1,1],"1":[1,6],"2":[7,7],"3":[7,7],"4":[7,7],"5":[1,1,1],"6":[1,0],"7":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/alll/Documents/GitHub/Todo-backend/src/modules/todoMessage/repository/todomessageRepo.ts","sources":["/Users/alll/Documents/GitHub/Todo-backend/src/modules/todoMessage/repository/todomessageRepo.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,uFAA0D;AAG1D,MAAM,cAAc,GAAG,CAAO,IAAS,EAAE,EAAE;IACvC,OAAO,MAAM,qBAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACtC,CAAC,CAAA,CAAA;AAkBQ,wCAAc;AAhBvB,MAAM,cAAc,GAAG,GAAS,EAAE;IAC9B,OAAO,MAAM,qBAAO,CAAC,IAAI,EAAE,CAAA;AAC/B,CAAC,CAAA,CAAA;AAcwB,wCAAc;AAZvC,MAAM,cAAc,GAAG,CAAO,EAAU,EAAE,EAAE;IACxC,OAAO,MAAM,qBAAO,CAAC,OAAO,CAAC,EAAC,GAAG,EAAE,EAAE,EAAC,CAAC,CAAC;AAC5C,CAAC,CAAA,CAAA;AAUwC,wCAAc;AARvD,MAAM,eAAe,GAAG,CAAO,EAAU,EAAE,IAAY,EAAE,KAAa,EAAE,OAAe,EAAE,EAAE;IACvF,OAAO,MAAM,qBAAO,CAAC,iBAAiB,CAAC,EAAC,GAAG,EAAE,EAAE,EAAC,EAAC,EAAC,IAAI,EAAE,KAAK,EAAE,OAAO,EAAC,CAAC,CAAC;AAC7E,CAAC,CAAA,CAAA;AAM2E,0CAAe;AAJ3F,MAAM,iBAAiB,GAAG,CAAO,EAAU,EAAE,EAAE;IAC3C,OAAO,MAAM,qBAAO,CAAC,SAAS,CAAC,EAAC,GAAG,EAAE,EAAE,EAAC,CAAC,CAAC;AAC9C,CAAC,CAAA,CAAA;AAEwD,8CAAiB","sourcesContent":["import Message from '../../../database/models/todomessage'\n\n\nconst createMessages = async (body: any) => {\n    return await Message.create(body);\n}\n\nconst getAllMessages = async () => {\n    return await Message.find()\n}\n\nconst getMessageById = async (id: string) => {\n    return await Message.findOne({_id: id});\n}\n\nconst editMessageById = async (id: string, name: string, email: string, message: string) => {\n    return await Message.findByIdAndUpdate({_id: id},{name, email, message});\n}\n\nconst deleteMessageById = async (id: string) => {\n    return await Message.deleteOne({_id: id});\n}\n\nexport { createMessages, getAllMessages, getMessageById, deleteMessageById, editMessageById }\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"239c7b9522f9a150b430b552642ebed7247a8fdf"}}